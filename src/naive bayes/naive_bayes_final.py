# -*- coding: utf-8 -*-
"""naive bayes final.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/171ppKCz3QNpcOSibg4UDpVH9ImsSZ5es
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from imblearn.over_sampling import SMOTE
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import classification_report, accuracy_score, confusion_matrix

# Carregar o conjunto de dados
data = pd.read_csv('heart_attack_prediction_dataset.csv')

# LIMPEZA E PREPARAÇÃO DOS DADOS

# Deletar coluna ID e colunas desnecessárias, se existirem
colunas_para_remover = ['Patient ID', 'Country', 'Continent', 'Hemisphere']
data = data.drop(columns=[col for col in colunas_para_remover if col in data.columns])

# Edição da Pressão Sanguínea
data["Systolic Pressure"] = data["Blood Pressure"].apply(lambda x: x.split("/")[0]).astype(int)
data["Dyastolic Pressure"] = data["Blood Pressure"].apply(lambda x: x.split("/")[1]).astype(int)
data = data.drop(columns=['Blood Pressure'])

# Redução de casas decimais para uma após a vírgula
pd.set_option('display.precision', 1)

# Transformando dados de 'Diet'
ordinal_map = {'Healthy': 2, 'Average': 1, 'Unhealthy': 0}
data['Diet'] = data['Diet'].map(ordinal_map)

# Transformando Male = 1 e Female = 0
ordinal_map_sex = {'Male': 1, 'Female': 0}
data['Sex'] = data['Sex'].map(ordinal_map_sex)

# Separar variáveis preditoras e variável a ser prevista
X = data.drop(columns=['Heart Attack Risk'])
y = data['Heart Attack Risk']

# Normalizar demais variáveis preditoras
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Aplicar SMOTE
smote = SMOTE(random_state=42)
X_res, y_res = smote.fit_resample(X_scaled, y)

# Dividir os dados em conjunto de treinamento e teste
X_train_res, X_test_res, y_train_res, y_test_res = train_test_split(X_res, y_res, test_size=0.2, random_state=42)

# Treinar o modelo Naive Bayes
naive_bayes_model_res = GaussianNB()
naive_bayes_model_res.fit(X_train_res, y_train_res)

# Fazer previsões e avaliar o modelo
y_pred_res = naive_bayes_model_res.predict(X_test_res)
print("Precisão:", accuracy_score(y_test_res, y_pred_res))
print("Matriz de confusão:\n", confusion_matrix(y_test_res, y_pred_res))
print("Classificação:\n", classification_report(y_test_res, y_pred_res))

# Inserir novos dados para previsão
novos_dados = pd.DataFrame({
    'Age': [20],  # Exemplo: 50 anos
    'Sex': [0],  # 0 para feminino
    'Cholesterol': [120],  # Exemplo: 220 mg/dL
    'Heart Rate': [75],  # Exemplo: 75 bpm
    'Diabetes': [0],  # Sem diabetes
    'Family History': [1],  # Histórico familiar positivo
    'Smoking': [1],  # Fumante
    'Obesity': [1],  # Obeso
    'Alcohol Consumption': [2],  # Consumo de álcool (por exemplo, 2 unidades)
    'Exercise Hours Per Week': [1],  # 1 hora de exercício por semana
    'Diet': [0],  # Dieta não saudável
    'Previous Heart Problems': [0],  # Sem problemas cardíacos prévios
    'Medication Use': [1],  # Uso de medicação
    'Stress Level': [4],  # Nível de estresse (por exemplo, 4)
    'Sedentary Hours Per Day': [8],  # 8 horas sedentárias por dia
    'Income': [45000],  # Renda anual (por exemplo, 45.000)
    'BMI': [28],  # Índice de Massa Corporal (por exemplo, 28)
    'Triglycerides': [180],  # Triglicerídeos (por exemplo, 180 mg/dL)
    'Physical Activity Days Per Week': [2],  # 2 dias de atividade física por semana
    'Sleep Hours Per Day': [6],  # 6 horas de sono por dia
    'Systolic Pressure': [130],  # Pressão sistólica (por exemplo, 130 mmHg)
    'Dyastolic Pressure': [85]  # Pressão diastólica (por exemplo, 85 mmHg)
})

# Normalizar os novos dados
novos_dados_scaled = scaler.transform(novos_dados)

# Fazer a previsão
previsao = naive_bayes_model_res.predict(novos_dados_scaled)
previsao_proba = naive_bayes_model_res.predict_proba(novos_dados_scaled)

# Mostrar os resultados
print("\nPrevisão de risco de ataque cardíaco (0 = Baixo, 1 = Alto):", previsao[0])
print("Probabilidades:", previsao_proba[0])